{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serverFarmResourceId": {
            "type": "string"
        },
        "functionsAppName": {
            "type": "string"
        },
        "dataStorageName": {
            "type": "string"
        },
        "dataStorageType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ]
        },
        "storageName": {
            "type": "string"
        },
        "storageType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ]
        },
        "stopSyncingSessionsFrom": {
            "type": "string"
        },
        "newSessionNotificationLogicAppUrl": {
            "type": "securestring"
        },
        "deploymentZipUrl": {
            "type": "securestring"
        },
        "sessionizeApiKey": {
            "type": "securestring"
        },
        "titoApiBearerToken": {
            "type": "securestring"
        },
        "submissionsAvailableFrom": {
            "type": "string"
        },
        "submissionsAvailableTo": {
            "type": "string"
        },
        "anonymousSubmissions": {
            "type": "string",
            "allowedValues": [
                "true",
                "false"
            ]
        },
        "conferenceInstance": {
            "type": "string"
        },
        "votingAvailableFrom": {
            "type": "string"
        },
        "votingAvailableTo": {
            "type": "string"
        },
        "ticketNumberWhileVoting": {
            "type": "string",
            "allowedValues": [
                "None",
                "Optional",
                "Required"
            ]
        },
        "waitingListCanVoteWithEmail": {
            "type": "string",
            "allowedValues": [
                "true",
                "false"
            ]
        },
        "minVotes": {
            "type": "string"
        },
        "maxVotes": {
            "type": "string"
        },
        "titoWebhookSecret": {
            "type": "string"
        },
        "titoEventId": {
            "type": "string"
        },
        "titoAccountId": {
            "type": "string"
        },
        "stopSyncingTitoFrom": {
            "type": "string"
        },
        "appInsightsApplicationId": {
            "type": "string"
        },
        "appInsightsApplicationKey": {
            "type": "string"
        },
        "startSyncingAppInsightsFrom": {
            "type": "string"
        },
        "stopSyncingAppInsightsFrom": {
            "type": "string"
        },
        "stopSyncingAgendaFrom": {
            "type": "string"
        },
        "sessionizeAgendaApiKey": {
            "type": "string"
        },
        "isSingleVoteEligibleForPrizeDraw": {
            "type": "string",
            "allowedValues": [
                "true",
                "false"
            ]
        },
        "feedbackAvailableFrom": {
            "type": "string"
        },
        "feedbackAvailableTo": {
            "type": "string"
        },
        "eloPasswordPhrase": {
            "type": "string"
        },
        "eloUserSessionStoreName": {
            "type": "string"
        },
        "eloUserSessionStoreDatabaseName": {
            "type": "string"
        },
        "eloUserSessionStoreContainerName": {
            "type": "string"
        }
    },
    "variables": {
        "appInsightsLocation": "East US",
        "sessionizeReadModelSyncSchedule": "0 */5 * * * *",
        "votingTable": "Votes",
        "titoSyncSchedule": "0 */5 * * * *",
        "titoTable": "Tito",
        "eloVotingTable": "EloVotes",
        "eloAllowedTimeInSecondsToSubmit": "120",
        "eloEnabled": "true",
        "waitingListTable": "TitoWaitingList",
        "appInsightsSyncSchedule": "0 */5 * * * *",
        "appInsightsTable": "AppInsights",
        "submissionsTable": "Submissions",
        "submittersTable": "Submitters",
        "sessionsTable": "Sessions",
        "presentersTable": "Presenters",
        "newSessionNotificationSchedule": "0 */5 * * * *",
        "notifiedSessionsTable": "NotifiedSessions",
        "sessionFeedbackTable": "SessionFeedback",
        "conferenceFeedbackTable": "ConferenceFeedback",
        "minNumSessionFeedbackForPrizeDraw": "4",
        "titoWebhookDeDupeTable": "WebhookDeDupe",
        "titoWebhookOrderNotificationQueue": "ordernotification",
        "titoWebhookTicketNotificationQueue": "ticketnotification"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "name": "[parameters('functionsAppName')]",
            "apiVersion": "2014-04-01",
            "location": "[variables('appInsightsLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/', parameters('functionsAppName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('functionsAppName')))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[parameters('functionsAppName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageName')]",
            "apiVersion": "2019-04-01",
            "sku": {
                "name": "[parameters('storageType')]"
            },
            "kind": "StorageV2",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('dataStorageName')]",
            "apiVersion": "2019-04-01",
            "sku": {
                "name": "[parameters('dataStorageType')]"
            },
            "kind": "StorageV2",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "location": "[resourceGroup().location]",
            "name": "[parameters('eloUserSessionStoreName')]",
            "kind": "GlobalDocumentDB",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                      "locationName": "[resourceGroup().location]"
                    }
                  ],
                "capabilities": [
                    {
                      "name": "EnableServerless"
                    }
                  ]
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[parameters('functionsAppName')]",
            "kind": "functionapp",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('functionsAppName')]",
                "serverFarmId": "[parameters('serverFarmResourceId')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageName'))]"
            ],
            "tags": {
                "[concat('hidden-related:', parameters('serverFarmResourceId'))]": "Resource"
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[parameters('functionsAppName')]",
                        "[resourceId('Microsoft.Insights/components', parameters('functionsAppName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageName'))]",
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('dataStorageName'))]"                        
                    ],
                    "properties": {
                        "WEBSITE_USE_ZIP": "[parameters('deploymentZipUrl')]",
                        "WEBSITE_NODE_DEFAULT_VERSION": "8.9.4",
                        "FUNCTIONS_EXTENSION_VERSION": "~3",
                        "FUNCTION_APP_EDIT_MODE": "readonly",
                        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('functionsAppName')), '2014-04-01').InstrumentationKey]",
                        "ApplicationInsights:InstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('functionsAppName')), '2014-04-01').InstrumentationKey]",
                        "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2015-06-15').key1)]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2015-06-15').key1)]",
                        "TitoWebhookConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2015-06-15').key1)]",
                        "NewSessionNotificationLogicAppUrl": "[parameters('newSessionNotificationLogicAppUrl')]",
                        "SessionsConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('dataStorageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageName')), '2015-06-15').key1)]",
                        "SessionizeApiKey": "[parameters('sessionizeApiKey')]",
                        "SessionizeReadModelSyncSchedule": "[variables('sessionizeReadModelSyncSchedule')]",
                        "StopSyncingSessionsFrom": "[parameters('stopSyncingSessionsFrom')]",
                        "SubmissionsAvailableFrom": "[parameters('submissionsAvailableFrom')]",
                        "SubmissionsAvailableTo": "[parameters('submissionsAvailableTo')]",
                        "AnonymousSubmissions": "[parameters('anonymousSubmissions')]",
                        "ConferenceInstance": "[parameters('conferenceInstance')]",
                        "VotesConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('dataStorageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageName')), '2015-06-15').key1)]",
                        "VotingTable": "[variables('votingTable')]",
                        "VotingAvailableFrom": "[parameters('votingAvailableFrom')]",
                        "VotingAvailableTo": "[parameters('votingAvailableTo')]",
                        "EloVotingTable": "[variables('eloVotingTable')]",
                        "EloVotesConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('dataStorageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageName')), '2015-06-15').key1)]",
                        "EloPasswordPhrase": "[parameters('eloPasswordPhrase')]",
                        "EloAllowedTimeInSecondsToSubmit": "[variables('eloAllowedTimeInSecondsToSubmit')]",
                        "EloEnabled": "[variables('eloEnabled')]",
                        "TicketNumberWhileVoting": "[parameters('ticketNumberWhileVoting')]",
                        "WaitingListCanVoteWithEmail": "[parameters('waitingListCanVoteWithEmail')]",
                        "WaitingListTable": "[variables('waitingListTable')]",
                        "WaitingListConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('dataStorageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageName')), '2015-06-15').key1)]",
                        "TitoWebhookSecret": "[parameters('titoWebhookSecret')]",
                        "TitoWebhookDeDupeTable": "[variables('titoWebhookDeDupeTable')]",
                        "TitoWebhookOrderNotificationQueue": "[variables('titoWebhookOrderNotificationQueue')]",
                        "TitoWebhookTicketNotificationQueue": "[variables('titoWebhookTicketNotificationQueue')]",
                        "TitoApiBearerToken": "[parameters('titoApiBearerToken')]",
                        "TitoSyncSchedule": "[variables('titoSyncSchedule')]",
                        "TitoTable": "[variables('titoTable')]",
                        "TitoEventId": "[parameters('titoEventId')]",
                        "TitoAccountId": "[parameters('titoAccountId')]",
                        "StopSyncingTitoFrom": "[parameters('stopSyncingTitoFrom')]",
                        "MinVotes": "[parameters('minVotes')]",
                        "MaxVotes": "[parameters('maxVotes')]",
                        "AppInsightsSyncSchedule": "[variables('appInsightsSyncSchedule')]",
                        "AppInsightsTable": "[variables('appInsightsTable')]",
                        "AppInsightsApplicationId": "[parameters('appInsightsApplicationId')]",
                        "AppInsightsApplicationKey": "[parameters('appInsightsApplicationKey')]",
                        "StartSyncingAppInsightsFrom": "[parameters('startSyncingAppInsightsFrom')]",
                        "StopSyncingAppInsightsFrom": "[parameters('stopSyncingAppInsightsFrom')]",
                        "StopSyncingAgendaFrom": "[parameters('stopSyncingAgendaFrom')]",
                        "SessionizeAgendaApiKey": "[parameters('sessionizeAgendaApiKey')]",
                        "SubmissionsTable": "[variables('submissionsTable')]",
                        "SubmittersTable": "[variables('submittersTable')]",
                        "SessionsTable": "[variables('sessionsTable')]",
                        "PresentersTable": "[variables('presentersTable')]",
                        "NewSessionNotificationSchedule": "[variables('newSessionNotificationSchedule')]",
                        "NotifiedSessionsTable": "[variables('notifiedSessionsTable')]",
                        "FeedbackConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('dataStorageName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataStorageName')), '2015-06-15').key1)]",
                        "SessionFeedbackTable": "[variables('sessionFeedbackTable')]",
                        "ConferenceFeedbackTable": "[variables('conferenceFeedbackTable')]",
                        "MinNumSessionFeedbackForPrizeDraw": "[variables('minNumSessionFeedbackForPrizeDraw')]",
                        "IsSingleVoteEligibleForPrizeDraw": "[parameters('isSingleVoteEligibleForPrizeDraw')]",
                        "FeedbackAvailableFrom": "[parameters('feedbackAvailableFrom')]",
                        "FeedbackAvailableTo": "[parameters('feedbackAvailableTo')]",
                        "UserVotingSessionsConnectionString": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('eloUserSessionStoreName')), '2019-12-12').connectionStrings[0].connectionString]",
                        "UserVotingSessionsDatabaseId": "[parameters('eloUserSessionStoreDatabaseName')]",
                        "UserVotingSessionsContainerId": "[parameters('eloUserSessionStoreContainerName')]"
                    }
                },
                {
                    "apiVersion": "2018-11-01",
                    "name": "web",
                    "type": "config",
                    "dependsOn": [
                        "[parameters('functionsAppName')]"
                    ],
                    "properties": {
                        "phpVersion": "",
                        "pythonVersion": "",
                        "nodeVersion": "8.9.4",
                        "javaVersion": null,
                        "netFrameworkVersion": "v4.0",
                        "use32BitWorkerProcess": true,
                        "webSocketsEnabled": true,
                        "alwaysOn": true,
                        "requestTracingEnabled": false,
                        "httpLoggingEnabled": true,
                        "logsDirectorySizeLimit": 100,
                        "detailedErrorLoggingEnabled": false,
                        "azureApplicationLogsFileSystemEnabled": true,
                        "cors": {
                            "allowedOrigins": [
                                "*"
                            ]
                        }
                    }
                },
                {
                    "apiVersion": "2018-11-01",
                    "name": "logs",
                    "type": "config",
                    "dependsOn": [
                        "[parameters('functionsAppName')]"
                    ],
                    "properties": {
                        "applicationLogs": {
                            "fileSystem": {
                                "level": "Information"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "microsoft.insights/metricAlerts",
            "name": "Request_Failures",
            "apiVersion": "2018-03-01",
            "location": "global",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', parameters('functionsAppName')))]": "Resource"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('functionsAppName'))]",
                "[resourceId('Microsoft.Insights/components', parameters('functionsAppName'))]"
            ],
            "properties": {
                "name": "Request_Failures",
                "description": "Alert for request failures",
                "severity": 3,
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.insights/components', parameters('functionsAppName'))]"
                ],
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "criteria": {
                    "allOf": [
                        {
                            "name": "Request_failures_more_than_zero",
                            "metricNamespace": "microsoft.insights/components",
                            "metricName": "requests/failed",
                            "dimensions": [],
                            "operator": "GreaterThan",
                            "threshold": 0,
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('microsoft.insights/components', parameters('functionsAppName'))]",
                        "metricNamespace": "microsoft.insights/components",
                        "metricName": "requests/failed"
                    }
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        }
    ]
}